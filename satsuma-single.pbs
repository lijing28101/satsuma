#!/bin/bash
#PBS -l nodes=1:ppn=16
#PBS -l walltime=96:00:00
#PBS -N satsuma

# Die if any variables are used that have not been declared
set -u

# # environmental variable needed by Satsuma
# export SATSUMA2_PATH=/data019/LAS/jingli/satsuma2-build/bin

# # path to satsuma executable
# satsuma=/data019/LAS/jingli/satsuma2-build/bin/SatsumaSynteny

# path to satsuma executable
# satsuma=/data019/LAS/jingli/satsuma-0-code/bin/SatsumaSynteny

# Query and target species names (these will be replaced with the actual names by the build_pbs.sh script)
query="QUERY"
target="TARGET"

# File containing the filenames for this target that have been processed
proclist=${target}_proclist

# Create file if it does not already exist
touch $proclist

# Create output folder for the query against this target
# This folder will contain one subfolder for each entry sequence in the query genome
outdir=${target}.vs.${query}

# Make output directory if it does not already exist
mkdir -p $outdir

file=split-Glycine_max/$target
# Get a unique id for the current file
base=`basename $file`
# Only process the sequence if it has not already been done
if [[ `grep -c $file $proclist` -eq 0 ]]
then
    rm -rf $outdir/$base
    mkdir $outdir/$base
    # Run Satsuma with default settings
    $PWD/satsuma/SatsumaSynteny \
        -t $file \
        -q data/${query}.fna \
        -n 15 \
        -dups 1 \
        -o $outdir/$base
    # Did the program complete successfully
    if [[ $? -eq 0 ]]
    then
        # if successful, add this filename to the completed jobs list
        echo $file >> $proclist
    fi
else
    # if the job has already been done, tell the user we are skipping the file
    echo "skipping $file"
fi
